@tailwind base;
@tailwind components;
@tailwind utilities;

/* ===== GLOBAL STYLES ONLY ===== */
/* These styles should only affect base HTML elements, never classes */

/* Smooth scrolling for the entire page */
html {
  scroll-behavior: smooth;
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  line-height: 1.6;
  overflow-x: hidden;
  scroll-behavior: smooth;
}

main {
  position: relative;
}

*, *::before, *::after {
  box-sizing: inherit;
}

/* Account for fixed navigation - ONLY for sections */
section {
  scroll-margin-top: 100px;
  min-height: 100vh;
  position: relative;
}

/* Remove default margins/padding that could cause conflicts */

/* ===== GLOBAL KEYFRAMES ===== */
/* These are shared animations that components can reference */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
}

/* ===== SCROLL FADE EFFECTS ===== */
/* Fade overlays for smooth scroll appearance */
.scroll-fade-overlay {
  position: fixed;
  left: 0;
  right: 0;
  height: 80px;
  pointer-events: none;
  z-index: 40;
  transition: opacity 0.3s ease;
}

.scroll-fade-top {
  top: 80px; /* Below navigation */
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0.9), transparent);
}

.scroll-fade-bottom {
  bottom: 0;
  background: linear-gradient(to top, rgba(255, 255, 255, 0.9), transparent);
}

/* Section fade animations */
.section-fade-in {
  opacity: 1;
  transform: translateY(0);
  transition: all 0.6s cubic-bezier(0.16, 1, 0.3, 1);
  will-change: transform, opacity;
}

.section-fade-in.fade-in {
  opacity: 1;
  transform: translateY(0);
}

.section-fade-in.fade-out {
  opacity: 0.3;
  transform: translateY(20px);
}

@keyframes float-delayed {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-15px); }
}

@keyframes float-slow {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-8px); }
}

@keyframes shine {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* ===== UTILITY CLASSES FOR TAILWIND EXTENSIONS ===== */
/* These extend Tailwind and are safe to use globally */
.animate-fadeInUp {
  animation: fadeInUp 0.6s ease-out forwards;
}

.animate-slideInLeft {
  animation: slideInLeft 0.6s ease-out forwards;
}

.animate-slideInRight {
  animation: slideInRight 0.6s ease-out forwards;
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-float-delayed {
  animation: float-delayed 8s ease-in-out infinite;
}

.animate-float-slow {
  animation: float-slow 10s ease-in-out infinite;
}

.animate-shine {
  animation: shine 2s infinite;
}

/* ===== NO COMPONENT-SPECIFIC STYLES HERE ===== */
/* All component styles should be in their own CSS modules */
